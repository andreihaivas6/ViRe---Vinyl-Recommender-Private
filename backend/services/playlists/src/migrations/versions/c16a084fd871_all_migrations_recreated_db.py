"""All migrations - Recreated db

Revision ID: c16a084fd871
Revises: 
Create Date: 2024-02-03 01:21:57.586633

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'c16a084fd871'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('playlists',
    sa.Column('playlist_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('playlist_name', sa.String(), nullable=False),
    sa.Column('imported_from_jspf', sa.Boolean(), nullable=False),
    sa.Column('playlist_description', sa.String(), nullable=True),
    sa.Column('user_name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('playlist_id')
    )
    with op.batch_alter_table('playlists', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_playlists_playlist_id'), ['playlist_id'], unique=False)

    op.create_table('playlist_content',
    sa.Column('playlist_content_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('playlist_id', sa.Integer(), nullable=False),
    sa.Column('track_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['playlist_id'], ['playlists.playlist_id'], ),
    sa.PrimaryKeyConstraint('playlist_content_id'),
    sa.UniqueConstraint('playlist_id', 'track_id', name='unique_playlist_content')
    )
    with op.batch_alter_table('playlist_content', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_playlist_content_playlist_content_id'), ['playlist_content_id'], unique=False)

    op.create_table('shared_playlists',
    sa.Column('shared_playlist_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('playlist_id', sa.Integer(), nullable=False),
    sa.Column('shared_with_user_name', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['playlist_id'], ['playlists.playlist_id'], ),
    sa.PrimaryKeyConstraint('shared_playlist_id'),
    sa.UniqueConstraint('playlist_id', 'shared_with_user_name', name='unique_shared_playlist')
    )
    with op.batch_alter_table('shared_playlists', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_shared_playlists_shared_playlist_id'), ['shared_playlist_id'], unique=False)

    op.create_table('tracks_for_jspf',
    sa.Column('track_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('playlist_id', sa.Integer(), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('artist', sa.String(), nullable=True),
    sa.Column('album', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['playlist_id'], ['playlists.playlist_id'], ),
    sa.PrimaryKeyConstraint('track_id')
    )
    with op.batch_alter_table('tracks_for_jspf', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_tracks_for_jspf_track_id'), ['track_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('tracks_for_jspf', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_tracks_for_jspf_track_id'))

    op.drop_table('tracks_for_jspf')
    with op.batch_alter_table('shared_playlists', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_shared_playlists_shared_playlist_id'))

    op.drop_table('shared_playlists')
    with op.batch_alter_table('playlist_content', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_playlist_content_playlist_content_id'))

    op.drop_table('playlist_content')
    with op.batch_alter_table('playlists', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_playlists_playlist_id'))

    op.drop_table('playlists')
    # ### end Alembic commands ###
